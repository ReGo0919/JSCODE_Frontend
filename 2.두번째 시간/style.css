/*
    유노코딩 css 강의 감상평 : 시간이 없어서 근무 할 때 css 강의를 정청하기만 하고 따로 정리를 하지 못했는데
    기본적으로 박스모델이나 position 부분에서 개념을 다시 정리 할 수 있었던 것 같습니다.
    하지만 뒤에 나오는 16강 부터의 개념들은 실습을 같이 병행해야 정리가 될 것 같아서 이번 주말에 실습을 병행 하면서 같이 개념을 정리 하고자 합니다.
*/
body {
  /*일단 body 안에 login-container가 있어서 이것을 중앙 정렬 시켜주기 위해
  flex 후 align-items, flex-direction을 center로 지정 했는데 가로만 정렬이 되고 세로만 정렬이 되어
  한 번 찾아봤더니 height을 100 viewport height로 설정하면 된다고 합니다.
  사용자가 보는 영역(vh)를 100으로 설정 할 때 해당 버튼도 100의 영역을 다 사용 할 수 있다는 뜻으로 이해 했습니다.
  */
  background-color: #d3d3d3;
  display: flex;
  height: 100vh;
}
.login-container {
  /*
  가볍게 bg-color, radius, flex 설정 해줬는데 
  여기서 login-container 안에 싸그리 다 포함을 시켜서 
  가운데 정렬을 위해 flex-direction 옵션을 사용했습니다.
  */
  background-color: #ffffff;
  border-radius: 5px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  height: 310px;
  width: 290px;
  margin: auto;
}
.login-container h2 {
  /*
  h2태그는 login-container의 flex에 직접적으로 영향을 받지 않는다기에
  text-align으로 가운데 정렬 후 margin 값을 주어 위치를 조절 했습니다.
*/
  text-align: center;
  margin-top: 5px;
  margin-bottom: 10px;
}

form {
  /*
    form 안에는 input-box, button, links를 다 넣었고
    해당 item들을 flex-direction으로 수직 나열 시켰습니다.
  */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
/*
  위의 form에서의 가운데 설정 때문에 form 안에 있는 links의 문자들이 같이 가운데 정렬 되어
  align-self로 자식의 위치만 왼쪽으로(flex-start 지점) 지정하도록 했습니다.
  */
form .links {
  align-self: flex-start;
}
.input-box input {
  /*
    input 태그들의 외곽선 처리와 padding, margin 속성을 각각 넣었습니다.
  */
  border: 0.5px solid #ccc;
  border-radius: 4px;
  padding: 12px;
  width: 210px;
  margin: 5px;
}
button {
  /*
    여기도 마찬가지로 적용을 해줬는데
    신기한게 button 안의 텍스트는 display 정렬 요소가 적용 되어서 신기했고
    근데 또 text-align은 적용이 안되더라고요. 음... 더 알아봐야 겠습니다.
  */
  background-color: #009000;
  display: flex;
  border: none;
  border-radius: 5px;
  color: white;
  cursor: pointer;
  font-size: 16px;
  justify-content: center;
  margin: 15px 0 20px 0;
  padding: 10px;
  width: 235px;
}
.links a {
  /*
    links의 a태그는 기본 font 스타일을 지정 해주고 왼쪽 마진을 살짝 주어
    안으로 들어가는 효과를 줬는데 문제는 아래의 hover 이벤트 때문에
    text-decoration이 마우스 커서를 올리지 않아도 상시 효과 발동이 되더라고요
    찾아보니 캐시 문제로 밑줄이 나타난 걸 수도 있다는.... (평소에도 포털에서 링크 선택 할 때 나타나는 현상처럼)
    그래서 일일이 캐시를 삭제하기는 좀 그렇고, text-decoration을 none으로 주어 평소에는 밑줄이 나타나지 않도록 했습니다.
  */
  color: #3cb371;
  font-size: 14px;
  font-weight: bold;
  margin: 0 0 0 6px;
  text-decoration: none;
}
.links a:hover {
  /*
   사용자가 마우스를 갔다 댔을때 커서의 모양이 바뀌고 텍스트에 밑줄이 나타나도록 설정했습니다.
  */
  cursor: pointer;
  text-decoration: underline;
  color: #009000;
}

/*
  작성평 : 이번에는 margin의 조절값에 주로 신경을 써서 그런지 값 조절을 하면서 흥미로웠고
  flex의 사용에 대해 좀 더 깊이 알 수 있었던 것 같습니다. 특히 vieport height이나
  해당 영역을 감싸는 방법 등을 좀 더 고민해야 되겠다는 생각도 가질 수 있었습니다.
*/
